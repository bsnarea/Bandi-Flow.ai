name: get_weather
description: 특정 도시의 실시간 날씨 정보를 가져옵니다. 사용자가 날씨나 기온에 대해 물어보면 이 툴을 사용하세요.
parameters:
  type: object
  properties:
    city:
      type: string
      description: 날씨 정보를 얻고자 하는 도시의 이름입니다.
  required:
    - city
function:
  type: python
  code: |
    import requests

    API_KEY = '    "code": "import requests\n\nAPI_KEY = '9aacc83d647602886d9bbea22bd4f927'\n\ndef get_weather(city):\n    base_url = \"http://api.openweathermap.org/data/2.5/weather\"\n    params = {\n        \"q\": city,\n        \"appid\": API_KEY,\n        \"units\": \"metric\",\n        \"lang\": \"kr\"\n    }\n    try:\n        response = requests.get(base_url, params=params)\n        response.raise_for_status()\n        data = response.json()\n        if data.get('cod') == 404:\n            return f\"도시를 찾을 수 없습니다: {city}\"\n        weather_desc = data['weather'][0]['description']\n        temp = data['main']['temp']\n        humidity = data['main']['humidity']\n        return f\"{city}의 현재 날씨는 {weather_desc}이며, 온도는 {temp}°C, 습도는 {humidity}%입니다.\"\n    except requests.exceptions.RequestException as e:\n        return f\"날씨 정보를 가져오는 데 실패했습니다: {e}\"\n    except Exception as e:\n        return f\"오류가 발생했습니다: {e}\""
'

    def get_weather(city):
        base_url = "http://api.openweathermap.org/data/2.5/weather"
        params = {
            "q": city,
            "appid": API_KEY,
            "units": "metric",
            "lang": "kr"
        }
        try:
            response = requests.get(base_url, params=params)
            response.raise_for_status()
            data = response.json()
            if data.get('cod') == 404:
                return f"도시를 찾을 수 없습니다: {city}"
            weather_desc = data['weather'][0]['description']
            temp = data['main']['temp']
            humidity = data['main']['humidity']
            return f"{city}의 현재 날씨는 {weather_desc}이며, 온도는 {temp}°C, 습도는 {humidity}%입니다."
        except requests.exceptions.RequestException as e:
            return f"날씨 정보를 가져오는 데 실패했습니다: {e}"
        except Exception as e:
            return f"오류가 발생했습니다: {e}"